apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: overseerr-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`overseerr.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kavita-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`kavita.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
    - match: Host(`books.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: foundry-v11-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`f11.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: tautulli-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`tautulli.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: filebrowser-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`filebrowser.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: artificer-traefik-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`artificer.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ta-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`ta.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: sonarr-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`sonarr.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: readarr-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`readarr.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: radarr-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`radarr.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spoolman-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`spoolman.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spoolman-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`home.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prowlarr-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`prowlarr.local.unrelated.family`)
      kind: Rule
      services:
        - name: arr-docker
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: hephruntus-ingress-route
  namespace: networking
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`hephrintus.local.unrelated.family`)
      kind: Rule
      services:
        - name: hephrintus-service
          port: 443
  tls:
    secretName: local-unrelated-family-tls
---
apiVersion: v1
kind: Service
metadata:
  name: arr-docker
  namespace: networking
spec:
  type: ExternalName
  externalName: "10.2.50.83"
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: hephrintus-service
  namespace: networking
spec:
  type: ExternalName
  externalName: "10.2.10.227"
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443